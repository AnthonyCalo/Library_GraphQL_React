{"version":3,"sources":["queries/CurrentUser.js","mutations/Logout.js","components/Header.js","components/HomePage.js","App.js","mutations/Login.js","components/AuthForm.js","components/LoginForm.js","mutations/Signup.js","components/registerform.js","components/SearchBar.js","apis/GoogleBooks.js","mutations/AddToShelf.js","mutations/AddToList.js","queries/GetUserBooks.js","queries/GetUserList.js","components/Accordion.jsx","components/BookResult.js","components/SearchResults.js","components/SearchPage.js","mutations/DeleteBook.js","components/ShelfBook.js","components/BookShelf.js","components/ListBook.js","components/ReadingList.js","mutations/AddReview.js","components/BookDetail.js","components/requireAuth.js","index.js"],"names":["gql","Header","this","props","mutate","refetchQueries","query","data","loading","user","className","to","onClick","onLogoutClick","bind","renderButtons","React","Component","graphql","mutation","HomePage","App","location","pathname","children","AuthForm","state","email","password","event","preventDefault","onSubmit","title","value","onChange","e","setState","target","type","style","color","errors","map","error","index","LoginForm","nextProps","console","log","variables","then","hashHistory","push","catch","response","graphQLErrors","message","RegisterForm","SearchBar","changeHandler","term","handleSumbit","autoFocus","axios","create","baseUrl","Accordion","active","item","onTitleClick","content","renderItems","BookResult","added","addedList","addToShelf","addToList","author","authors","genre","imageUrl","opts","name","err","AddToList","src","undefined","join","renderAddedShelf","renderAddedList","description","compose","SearchResult","results","result","volumeInfo","imageLinks","thumbnail","categories","previewLink","renderBooks","SearchPage","a","get","params","q","maxResults","items","searchResults","showMore","more","SearchResults","renderMore","ShelfBook","id","book","alt","href","onDeleteBook","DeleteBook","BookShelf","bookShelf","GetUserBooks","ListBook","deleteBook","AddToShelf","ReadingList","refetch","readingList","GetUserList","BookDetail","editing","url","method","res","getBookDetail","review","document","getElementById","click","clickBack","renderReview","WrappedComponent","RequireAuth","networkInterface","createNetworkInterface","uri","credentials","client","ApolloClient","dataIdFromObject","o","Root","history","path","component","exact","requireAuth","ReactDOM","render","querySelector"],"mappings":"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","file":"static/js/main.9dbf40d0.chunk.js","sourcesContent":["import gql from \"graphql-tag\";\r\n\r\nexport default gql`\r\n    query GetUser{\r\n        user{\r\n            id\r\n            email\r\n        }\r\n    }\r\n`;","import gql from \"graphql-tag\";\r\n\r\n//error when not naming mutation\r\n\r\nexport default gql`\r\n    mutation logout{\r\n        logout{\r\n            email\r\n        }\r\n    }\r\n`","import React from 'react';\r\nimport query from \"../queries/CurrentUser\";\r\nimport {graphql} from \"react-apollo\";\r\nimport {Link} from \"react-router\";\r\nimport mutation from \"../mutations/Logout\";\r\n\r\nclass Header extends React.Component{\r\n    onLogoutClick(){\r\n        this.props.mutate({\r\n            refetchQueries: [{query}]\r\n        })\r\n    }\r\n    renderButtons(){\r\n        const {loading, user} = this.props.data;\r\n        if(loading) {return <div />;}\r\n\r\n        if(user){\r\n            return(\r\n                <div className=\"fullWidth\"> \r\n                    <li className=\"navbarItemLIOne\"><Link to=\"/home\">HomePage</Link></li>\r\n                    <li className=\"navbarItemLIOne\"><Link to=\"/search\">Search</Link></li>\r\n                    <li className=\"navbarItemLI\"><Link to=\"/myshelf\">My Shelf</Link></li>\r\n                    <li className=\"navbarItemLI\"><Link to=\"/myList\">ReadingList</Link></li>\r\n                    <li className=\"navbarItemLI\"><a onClick={this.onLogoutClick.bind(this)}>Logout</a></li>\r\n                </div>\r\n            )\r\n        }else{\r\n            return ( \r\n                <div className=\"notAuthHeader\">\r\n                    <li><Link to=\"/register\">Register</Link></li>\r\n                    <li><Link to=\"/login\">Login</Link></li>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n    render(){\r\n        return(\r\n        <nav>\r\n            <div className=\"nav-wrapper header\">\r\n                <ul className=\"navBarDiv\">\r\n                    {this.renderButtons()}\r\n                </ul>\r\n            </div>\r\n        </nav>\r\n        )\r\n    }\r\n}\r\n\r\nexport default graphql(mutation)\r\n    (graphql(query)(Header));","import React from 'react';\r\nimport {Link} from \"react-router\";\r\n\r\nclass HomePage extends React.Component{\r\n    render(){\r\n        return ( \r\n            <div className=\"homePage\">\r\n                <div className=\"homeTextDiv\">\r\n                    <div className=\"homeText\">\r\n                        Login or Register to create custom bookshelf\r\n                    </div>\r\n                    <br/>\r\n                    <br/>\r\n                    <div className=\"homeBtn\">\r\n                    <Link to=\"/register\"><button className=\"loginBtn\">Register</button></Link>\r\n                    <Link to=\"/login\"><button className=\"loginBtn\">Login</button></Link>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )}\r\n}\r\n\r\nexport default HomePage","import React, {component} from 'react';\r\nimport Header from \"./components/Header\"\r\nimport HomePage from './components/HomePage';\r\nclass App extends React.Component{\r\n    render(){\r\n        if(this.props.location.pathname==\"/\"){\r\n            return ( \r\n                <div>\r\n                    <Header />\r\n                    <HomePage />\r\n                </div>\r\n            )\r\n        }else{\r\n            return ( \r\n                <div>\r\n                    <Header />\r\n                    {this.props.children}\r\n                </div>\r\n            )\r\n        }\r\n\r\n    }\r\n}\r\nexport default App;","import gql from 'graphql-tag';\r\n\r\n\r\nexport default gql`\r\n    mutation Login($email:String, $password: String){\r\n        login(email: $email, password: $password){\r\n            id\r\n            email\r\n        }\r\n    }\r\n` \r\n","import React from 'react';\r\nimport mutation from \"../mutations/Login\";\r\nimport { graphql } from 'react-apollo';\r\nclass AuthForm extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={email: \"\", password: \"\"}\r\n    }\r\n    onSubmit(event){\r\n        event.preventDefault();\r\n        this.props.onSubmit(this.state);\r\n    }\r\n\r\n    render(){\r\n        return ( \r\n            <div className=\"authDiv\">\r\n                <h3>{this.props.title}</h3>\r\n                <form className=\"col s6\" onSubmit={this.onSubmit.bind(this)}>\r\n                    <div className=\"input-field\">\r\n                        <label>Email</label>\r\n                        <br/>\r\n                        <br/>\r\n                        <input \r\n                            value={this.state.email} \r\n                            onChange={(e)=>this.setState({email: e.target.value})}\r\n                            className=\"authInput\"\r\n                        />\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label>Password</label>\r\n                        <br/>\r\n                        <br/>\r\n                        <input\r\n                            type='password' \r\n                            value={this.state.password} \r\n                            onChange={(e)=>this.setState({password: e.target.value})}\r\n                            className=\"authInput\"\r\n\r\n                        />\r\n                    </div>\r\n                    <div style={{color: \"red\"}} className=\"errors\">\r\n                        {this.props.errors.map((error, index)=><div key={index}>{error}</div>)}\r\n                    </div>\r\n                    <button type=\"submit\" className=\"btn\">Submit</button>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AuthForm;","import React from 'react';\r\nimport AuthForm from './AuthForm';\r\nimport mutation from \"../mutations/Login\";\r\nimport { graphql } from 'react-apollo';\r\nimport query from \"../queries/CurrentUser\";\r\nimport {hashHistory} from \"react-router\"\r\nclass LoginForm extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={ errors: [] }\r\n    }\r\n    componentWillUpdate(nextProps){\r\n        if(!this.props.data.user&&nextProps.data.user){\r\n            console.log(\"Just signed in\");\r\n        }\r\n    }\r\n    onSubmit({email, password}){\r\n        this.props.mutate({\r\n            variables:{email, password},\r\n            refetchQueries: [{ query }]\r\n        })\r\n        .then(()=>{\r\n            hashHistory.push(\"search\")\r\n        }).catch(response=>{\r\n            const errors=response.graphQLErrors.map(error=>error.message);\r\n            this.setState({errors})\r\n        })\r\n    }\r\n    render(){\r\n        return ( \r\n            <div className=\"loginDiv\">\r\n                <AuthForm \r\n                    title=\"Login\"\r\n                    errors={this.state.errors}\r\n                    onSubmit={this.onSubmit.bind(this)}\r\n                    />\r\n            </div>\r\n        )\r\n    }\r\n};\r\n\r\nexport default graphql(query)(graphql(mutation)(LoginForm));","import gql from 'graphql-tag';\r\n\r\nexport default gql`\r\n    mutation SignUp($email: String, $password: String){\r\n        signup(email:$email, password: $password){\r\n            id\r\n            email\r\n        }\r\n    }\r\n`","import React from 'react';\r\nimport AuthForm from './AuthForm';\r\nimport mutation from \"../mutations/Signup\";\r\nimport { graphql } from 'react-apollo';\r\nimport query from \"../queries/CurrentUser\";\r\nimport {hashHistory} from \"react-router\"\r\n\r\nclass RegisterForm extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={errors: []}\r\n    }\r\n    componentWillUpdate(nextProps){\r\n        if(!this.props.data.user&&nextProps.data.user){\r\n            hashHistory.push(\"/dashboard\");\r\n        }\r\n    }\r\n    onSubmit({email, password}){\r\n        this.props.mutate({\r\n            variables:{email, password},\r\n            refetchQueries: [{ query }]\r\n        }).catch(response=>{\r\n            const errors=response.graphQLErrors.map(error=>error.message);\r\n            this.setState({errors})\r\n        })\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"loginDiv\">\r\n                <AuthForm \r\n                    title=\"Register\"\r\n                    errors={this.state.errors}\r\n                    onSubmit={this.onSubmit.bind(this)}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default graphql(query)(graphql(mutation)(RegisterForm));\r\n","import React from 'react';\r\nimport \"./bookDetail.css\";\r\nclass SearchBar extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            term: \"\"\r\n        };\r\n        \r\n    }\r\n    componentDidMount(){\r\n        console.log(this.props);\r\n    }\r\n    \r\n    changeHandler=(event)=>{\r\n        this.setState({term: event.target.value})\r\n    }\r\n    \r\n    handleSumbit=event=>{\r\n        event.preventDefault();\r\n        //passing this.state.term from child(searchbar) to parent (app.js)\r\n        this.props.onSubmit(this.state.term);\r\n\r\n    };\r\n\r\n\r\n    render(){\r\n        return(\r\n            <div className='searchBar'>\r\n                <form className='searchForm' onSubmit={this.handleSumbit}>\r\n                        <input type=\"text\" className=\"searchInput\" value={this.state.term} onChange={this.changeHandler} autoFocus></input>\r\n                </form>\r\n            </div>\r\n            );\r\n    }\r\n}\r\n\r\nexport default SearchBar;","import axios from \"axios\";\r\n\r\nexport default axios.create({\r\n    baseUrl: \"https://www.googleapis.com/books/v1/volumes?\"\r\n})\r\n\r\n","import gql from 'graphql-tag';\r\n\r\nexport default gql`\r\n    mutation AddToBookShelf($author: String, $title: String, $imageUrl: String, $genre: String){\r\n        addToBookShelf(author:$author, title:$title, imageUrl:$imageUrl, genre:$genre){\r\n            title\r\n            id\r\n        }\r\n    }\r\n`","import gql from 'graphql-tag';\r\n\r\nexport default gql`\r\n    mutation AddToList($author: String, $title: String, $imageUrl: String,$genre: String){\r\n        addToList(author:$author, title:$title, imageUrl: $imageUrl, genre:$genre){\r\n            title\r\n            id\r\n        }\r\n    }\r\n`","import gql from \"graphql-tag\";\r\n\r\nexport default gql`\r\n    query GetUserBooks{\r\n        user{\r\n            id\r\n            email\r\n            bookShelf{\r\n                title\r\n                id\r\n                author\r\n                imageUrl\r\n            }\r\n            readingList{\r\n                id\r\n            }\r\n        }\r\n    }\r\n`;","import gql from \"graphql-tag\";\r\n\r\nexport default gql`\r\n    query GetUserList{\r\n        user{\r\n            id\r\n            readingList{\r\n                title\r\n                id\r\n                author\r\n                imageUrl\r\n            }\r\n            bookShelf{\r\n                title\r\n                id\r\n                imageUrl\r\n                author\r\n            }\r\n        }\r\n    }\r\n`;","import React from 'react';\r\n\r\nclass Accordion extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={active: false}\r\n    }\r\n    onTitleClick(){\r\n        this.setState({active:!this.state.active});\r\n    }\r\n    renderItems(){\r\n        if(this.state.active){\r\n            console.log(this.props.item)\r\n            return( \r\n            <div>\r\n                <div\r\n                className=\"accordion_title\"\r\n                onClick={this.onTitleClick.bind(this)}\r\n                >\r\n                    Hide Description &nbsp;\r\n                    <i className=\"icon arrow up\"></i>\r\n\r\n                </div>\r\n\r\n                <div className=\"accordion_content\">\r\n                    <p>{this.props.item.content}</p>\r\n                </div>\r\n            </div>\r\n            )\r\n        }else{\r\n            return ( \r\n                <div\r\n                    className=\"accordion_title \"\r\n                    onClick={this.onTitleClick.bind(this)}\r\n                >\r\n                    See Description &nbsp;\r\n                    <i className=\"icon arrow down\"></i>\r\n\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n    render(){\r\n        return (\r\n            <div className=\"accordion\">\r\n            {this.renderItems()}\r\n            </div>\r\n            )\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default Accordion;\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport mutation from \"../mutations/AddToShelf\";\r\nimport AddToList from \"../mutations/AddToList\";\r\nimport { graphql, compose } from 'react-apollo';\r\nimport \"./searchResults.css\";\r\nimport query from \"../queries/GetUserBooks\";\r\nimport query2 from \"../queries/GetUserList\"\r\nimport gql from \"graphql-tag\";\r\nimport Accordion from './Accordion';\r\n\r\nconst List_Query=gql`\r\n    query getUserList{\r\n        user{\r\n            id\r\n            readingList{\r\n                title\r\n                id\r\n                author\r\n                imageUrl\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nclass BookResult extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={added: false, addedList: false}\r\n    }\r\n    renderAddedShelf(){\r\n        if(!this.state.added){\r\n            return (\r\n                <a onClick={this.addToShelf.bind(this)} className=\"mutationClick\">+ Add to book shelf</a>\r\n            )\r\n        }else{\r\n            return( \r\n                <a className=\"mutationClick\">added to book shelf</a>\r\n            )\r\n        }\r\n    }\r\n    renderAddedList(){\r\n        if(!this.state.addedList){\r\n            return (\r\n                <a onClick={this.addToList.bind(this)} className=\"mutationClick\">+ Add to book reading list</a>\r\n            )\r\n        }else{\r\n            return( \r\n                <a className=\"mutationClick\">added to reading list</a>\r\n            )\r\n        }\r\n    }\r\n    \r\n    addToShelf(){\r\n        this.props.addToShelf({\r\n            variables:{\r\n                author: this.props.authors[0],\r\n                title: this.props.title,\r\n                genre: this.props.genre[0],\r\n                imageUrl: this.props.imageUrl\r\n            },\r\n            opts: {\r\n                name: mutation\r\n            },\r\n            refetchQueries: [{query}]\r\n        })\r\n        .then(()=>{\r\n            console.log(\"here\");\r\n            this.setState({added:true})\r\n        })\r\n        .catch(err=>{\r\n            console.log(err);\r\n        })\r\n    }\r\n    addToList(){\r\n        this.props.addToList({\r\n            variables:{\r\n                author: this.props.authors[0],\r\n                title: this.props.title,\r\n                genre: this.props.genre[0],\r\n                imageUrl: this.props.imageUrl\r\n            },\r\n            opts: {\r\n                mutation:AddToList\r\n            },\r\n            refetchQueries:[{query}]\r\n        })\r\n        .then(()=>{\r\n            console.log(this.props)\r\n            this.setState({addedList:true})\r\n        })\r\n        .catch(err=>{\r\n            console.log(\"ERROR HERE FUCK FUCK\")\r\n            console.log(err);\r\n        })\r\n       \r\n    }\r\n    render(){\r\n        return(\r\n            <div className=\"column\">\r\n            <div className=\"ui card\">\r\n                <div className=\"image\">\r\n                    <img src={this.props.imageUrl}></img>\r\n                </div>                \r\n                <div className=\"content\">\r\n                    <a className=\"bookTitleResult\">{this.props.title}</a>\r\n                    <div className=\"description\">\r\n                    {this.props.authors!==undefined ? this.props.authors.join(\", \"): 'Unkown authors'}\r\n                    </div>\r\n                    <br/>\r\n                    \r\n                    {this.renderAddedShelf()}\r\n                    <br/>\r\n                    {this.renderAddedList()}\r\n                    <br/>\r\n                    <br/>\r\n                    <Accordion item={{\r\n                        title: \"see Description\",\r\n                        content: this.props.description\r\n                    }} />\r\n\r\n                </div>\r\n\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    graphql(AddToList, {name:\"addToList\"}),\r\n    graphql(mutation, {name: \"addToShelf\"})\r\n    )(BookResult);","import React from 'react';\r\nimport SearchBar from './SearchBar';\r\nimport BookResult from './BookResult';\r\n\r\nclass SearchResult extends React.Component{\r\n    renderBooks(){\r\n        let showBooks = this.props.results.map(result=>{\r\n            if (result.volumeInfo.imageLinks){\r\n                return ( \r\n                    <BookResult \r\n                        imageUrl={result.volumeInfo.imageLinks.thumbnail}\r\n                        title={result.volumeInfo.title}\r\n                        description={result.volumeInfo.description}\r\n                        authors={result.volumeInfo.authors}\r\n                        genre={result.volumeInfo.categories}\r\n                        description={result.volumeInfo.description}\r\n                        link={result.volumeInfo.previewLink}\r\n                        />\r\n                )\r\n            }else{\r\n                return( <div></div>)\r\n            }\r\n            \r\n        })\r\n        return showBooks;\r\n    }\r\n    render(){\r\n        return( \r\n            <div>\r\n                <h2 className=\"resultsH2\">Search Results Here</h2>\r\n                <div className=\"shelfDiv resultsDiv\">\r\n                    {this.renderBooks()}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SearchResult;","import React, {useState} from 'react';\r\nimport SearchBar from './SearchBar';\r\nimport GoogleBooks from '../apis/GoogleBooks';\r\nimport axios from 'axios';\r\nimport SearchResults from \"./SearchResults\";\r\n\r\nclass SearchPage extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={searchResults:[], term: \"\", showMore:false}\r\n    }\r\n    onSubmit=async(term)=>{\r\n        this.setState({term: term})\r\n        const response = await axios.get(\"https://www.googleapis.com/books/v1/volumes?\",{\r\n            params: { \r\n                q: term,\r\n                maxResults: 20\r\n            }\r\n        });\r\n        console.log(response.data.items[0]);\r\n        this.setState({searchResults: response.data.items, showMore: true});\r\n      }\r\n    more=async()=>{\r\n        const response = await axios.get(\"https://www.googleapis.com/books/v1/volumes?\",{\r\n            params: { \r\n                q: this.state.term,\r\n                maxResults: 40\r\n            }\r\n        });\r\n        this.setState({searchResults: response.data.items, showMore: false});\r\n      }\r\n    renderMore(){\r\n        if(this.state.showMore){\r\n            return ( \r\n                <a onClick={this.more} className=\"moreButton\">More results<i className=\"icon arrow down alternate circle\"></i></a>\r\n            )\r\n        }else{\r\n            return\r\n        }\r\n    }\r\n    render(){\r\n        return ( \r\n            <div>\r\n                <SearchBar onSubmit={this.onSubmit} />\r\n                <SearchResults results={this.state.searchResults}/>\r\n                <br/>\r\n                {this.renderMore()}\r\n            </div>\r\n        )\r\n    }\r\n    \r\n}\r\n\r\nexport default SearchPage;\r\n\r\n","import gql from 'graphql-tag';\r\n\r\nexport default gql`\r\n    mutation DeleteBook($id: ID){\r\n        deleteBook(id:$id){\r\n            id\r\n        }\r\n    }\r\n`","import React from 'react';\r\nimport DeleteBook from '../mutations/DeleteBook';\r\nimport {graphql} from 'react-apollo';\r\nimport query from '../queries/GetUserBooks';\r\n\r\n\r\nclass ShelfBook extends React.Component {\r\n    constructor(props){\r\n        super(props)\r\n    } \r\n    onDeleteBook(id){\r\n        this.props.mutate({\r\n            variables: {id},\r\n            refetchQueries:[{query}]\r\n        })\r\n            \r\n    }\r\n    render(){\r\n    return (\r\n            <div className=\"ui card\">\r\n                <img src={this.props.book.imageUrl} alt={this.props.book.title}></img>\r\n                <br/>\r\n                <div className=\"content\">\r\n                    <h6 className=\"bookTitleResult\"> &#9;{this.props.book.title}</h6>\r\n                    <h7 className=\"authors\">{this.props.book.author}</h7>\r\n                    <br/>\r\n                    <br/>\r\n                    <a className=\"shelfParam\" href={`#/book/${this.props.book.id}`}>Review/ Notes</a>\r\n                    <br/>\r\n                    <br/>\r\n                    <a onClick={()=>this.onDeleteBook(this.props.book.id)} className=\"deleteClick\">- Delete Book</a>\r\n                </div>\r\n            </div>)\r\n    }\r\n}\r\n\r\nexport default graphql(DeleteBook)(ShelfBook);","import React from 'react';\r\nimport {graphql} from 'react-apollo';\r\nimport GetUserBooks from '../queries/GetUserBooks';\r\nimport \"./Shelf.css\"\r\nimport ShelfBook from './ShelfBook';\r\n\r\nclass BookShelf extends React.Component{\r\n\r\n    renderBooks(){\r\n        if(!this.props.data.user){\r\n            return(<div>loading</div>)\r\n        }else{\r\n            let books=this.props.data.user.bookShelf.map(book=>{\r\n                return( \r\n                    <ShelfBook book={book} />\r\n                )\r\n            })\r\n        return(books);\r\n\r\n        }\r\n\r\n    }\r\n    render(){\r\n        return (\r\n            <div>\r\n                    <br/>\r\n                <div className=\"resultsDiv shelfDiv\">\r\n                    {this.renderBooks()}\r\n                </div>\r\n            </div>\r\n            )\r\n    }\r\n}\r\n\r\nexport default graphql(GetUserBooks)(BookShelf)","import React from 'react';\r\nimport DeleteBook from '../mutations/DeleteBook';\r\nimport { graphql, compose } from 'react-apollo';\r\n\r\nimport query from '../queries/GetUserList';\r\nimport AddToShelf from '../mutations/AddToShelf';\r\n\r\n\r\nclass ListBook extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state={addedList:false}\r\n    } \r\n    onDeleteBook(id){\r\n        this.props.deleteBook({\r\n            variables: {id},\r\n            refetchQueries:[{query}]\r\n        })\r\n            \r\n    }\r\n    addToShelf(){\r\n        this.props.addToShelf({\r\n            variables:{\r\n                author: this.props.book.author,\r\n                title: this.props.book.title,\r\n                genre: this.props.book.genre,\r\n                imageUrl: this.props.book.imageUrl\r\n            },\r\n            refetchQueries: [{query}]\r\n        })\r\n        .then(()=>{\r\n            console.log(\"here\");\r\n            this.setState({added:true})\r\n        })\r\n        .catch(err=>{\r\n            console.log(err);\r\n        })\r\n    }\r\n    renderAddedShelf(){\r\n        if(!this.state.added){\r\n            return (\r\n                <a onClick={this.addToShelf.bind(this)} className=\"mutationClick\">+ Add to book shelf</a>\r\n            )\r\n        }else{\r\n            return( \r\n                <a className=\"mutationClick\">added to book shelf</a>\r\n            )\r\n        }\r\n    }\r\n    render(){\r\n    return (\r\n            <div className=\"ui card\">\r\n                <img src={this.props.book.imageUrl} alt={this.props.book.title}></img>\r\n                <br/>\r\n                <div className=\"content\">\r\n                    <h6 className=\"bookTitleResult\"> &#9;{this.props.book.title}</h6>\r\n                    <h7 className=\"authors\">{this.props.book.author}</h7>\r\n\r\n                    <br/>\r\n                    <br/>\r\n\r\n                    <div>\r\n                    {this.renderAddedShelf()}\r\n                    <br/>\r\n                    <a onClick={()=>this.onDeleteBook(this.props.book.id)} className=\"deleteClick\">- Delete Book</a>\r\n                </div>\r\n                    \r\n                </div>\r\n            </div>)\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    graphql(DeleteBook, {name:\"deleteBook\"}),\r\n    graphql(AddToShelf, {name:\"addToShelf\"}))(ListBook);","import React from 'react';\r\nimport {graphql} from 'react-apollo';\r\nimport GetUserList from '../queries/GetUserList';\r\nimport \"./Shelf.css\"\r\nimport ListBook from './ListBook';\r\n\r\nclass ReadingList extends React.Component{\r\n    componentDidMount(){\r\n        this.props.data.refetch();\r\n        console.log(\"here refetching\");\r\n    }\r\n    renderBooks(){\r\n        if(!this.props.data.user){\r\n            return(<div>loading</div>)\r\n        }else{\r\n            let books=this.props.data.user.readingList.map(book=>{\r\n                return( \r\n                    <ListBook book={book} />\r\n                )\r\n            })\r\n        return(books);\r\n\r\n        }\r\n\r\n    }\r\n    render(){\r\n        return (\r\n            <div>\r\n                <h1>Reading List</h1>\r\n                    <hr />\r\n                    <br/>\r\n                <div className=\"resultsDiv shelfDiv\">\r\n                    {this.renderBooks()}\r\n                </div>\r\n            </div>\r\n            )\r\n    }\r\n}\r\n\r\nexport default graphql(GetUserList)(ReadingList)","import gql from 'graphql-tag';\r\n\r\n\r\nexport default gql`\r\n    mutation addReview($id: ID, $review: String){\r\n        addReview(id:$id, review: $review){\r\n            id\r\n            title\r\n        }\r\n    }\r\n`","import React from 'react';\r\nimport { graphql, compose } from 'react-apollo';\r\nimport gql from \"graphql-tag\"\r\nimport axios from \"axios\";\r\nimport \"./bookDetail.css\";\r\nimport mutation from \"../mutations/AddReview\";\r\nimport {Link, hashHistory} from \"react-router\";\r\n\r\n\r\nclass BookDetail extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\"book\":{}, \"review\": \"\", editing: false}\r\n    }\r\n    componentDidMount() {\r\n        axios({\r\n            url: \"/graphql\",\r\n            method: \"post\",\r\n            data: {\r\n                query: `\r\n                {\r\n                    getBookDetail(id: \"${this.props.params.id}\"){\r\n                        title\r\n                        author\r\n                        review\r\n                        notes\r\n                        imageUrl\r\n                    }\r\n                }\r\n                `\r\n            }\r\n        }).then(res=>{\r\n            console.log(\"here at RESPONSE\")\r\n            this.setState({\"book\": res.data.data.getBookDetail});\r\n            this.setState({\"review\": res.data.data.getBookDetail.review});\r\n            console.log(this.state.review);\r\n        })\r\n        .catch(err=>{\r\n            console.log(err);\r\n        })\r\n\r\n    }\r\n    onSubmit(event){\r\n        event.preventDefault();\r\n        this.props.mutate({\r\n            variables: {\r\n                id: this.props.params.id,\r\n                review:this.state.review\r\n            }\r\n        }).then(()=>{\r\n            hashHistory.push(\"/myshelf\")\r\n        })\r\n    }\r\n    clickBack(){\r\n        document.getElementById(\"clickBack\").click();\r\n    }\r\n    renderReview(){\r\n        if(this.state.editing){\r\n            return ( \r\n                <div className=\"editDiv\">\r\n                    <textarea id=\"myTextArea\" className=\"textArea\" value={this.state.review} onChange={e=>this.setState({review:e.target.value})} className=\"\" name=\"postBody\" cols=\"80\" rows='8'></textarea>\r\n                        <br />\r\n                    <div className=\"editBtnDiv\">\r\n                        <button id=\"pubButton\" className=\"btn submitReviewBtn\" type=\"submit\" onClick={this.onSubmit.bind(this)}>Publish</button>\r\n                        <button className=\"btn btn-primary\" onClick={()=>this.clickBack()}>Cancel Review</button>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }else{\r\n            return ( \r\n                <div className=\"seeReviewDiv\">\r\n                    <div className=\"textArea\">\r\n                        <i\r\n                            className=\"edit icon big right\"\r\n                            onClick={()=>this.setState({editing: true})}\r\n                        ></i>\r\n                        <br/>\r\n                        {this.state.book.review}\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n    render(){\r\n        return ( \r\n            <div className=\"reviewDiv\">\r\n                    <Link id=\"clickBack\" to=\"/myshelf\" className=\"back\">\r\n                        <i className=\"icon arrow alternate circle left\"></i> Back \r\n                    </Link>\r\n                    <div className=\"reviewImgDiv\">\r\n                        <img className=\"reviewImg\" alt=\"bookReview\" src={this.state.book.imageUrl}></img>\r\n                    </div>\r\n                    <h1>Review <span className=\"iTitle\">{this.state.book.title}</span> by {this.state.book.author}</h1>\r\n                    {this.renderReview()}\r\n                   \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport default graphql(mutation)(BookDetail);","import React from 'react';\r\nimport query from \"../queries/CurrentUser\";\r\nimport {graphql} from \"react-apollo\";\r\nimport {hashHistory} from \"react-router\";\r\n\r\nexport default (WrappedComponent) => {\r\n    class RequireAuth extends React.Component{\r\n        componentWillUpdate(nextProps){\r\n            if (!nextProps.data.loading && !nextProps.data.user){\r\n                hashHistory.push(\"/home\");\r\n            }\r\n        }\r\n        render(){\r\n            return (<WrappedComponent {...this.props}/>)\r\n        }\r\n    }\r\n    \r\n    \r\n    return graphql(query)(RequireAuth);\r\n}\r\n","import React, {useState} from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport ApolloClient, {createNetworkInterface} from \"apollo-client\";\r\nimport {ApolloProvider} from 'react-apollo';\r\nimport {Router, Route, hashHistory, IndexRoute} from \"react-router\";\r\nimport App from \"./App\";\r\nimport LoginForm from './components/LoginForm';\r\nimport RegisterForm from './components/registerform';\r\nimport SearchPage from './components/SearchPage';\r\nimport BookShelf from './components/BookShelf';\r\nimport ReadingList from './components/ReadingList';\r\nimport BookDetail from \"./components/BookDetail\";\r\nimport HomePage from \"./components/HomePage\";\r\nimport requireAuth from './components/requireAuth';\r\n\r\nconst networkInterface=createNetworkInterface({\r\n    uri: \"/graphql\",\r\n    opts:{\r\n      credentials: \"include\",\r\n    }\r\n  })\r\nconst client = new ApolloClient({\r\n    networkInterface,\r\n    dataIdFromObject: o =>o.id\r\n});\r\n\r\nconst Root = () => {\r\n\r\n  return (\r\n    <ApolloProvider client={client}>\r\n      <Router history={hashHistory}>\r\n        <Route path=\"/\" component={App}>\r\n          <Route exact path=\"/\" component={HomePage} />\r\n          <Route exact path=\"/home\" component={HomePage} />\r\n          <Route exact path=\"/login\" component={LoginForm} />\r\n          <Route exact path=\"/register\" component={RegisterForm} />\r\n          <Route exact path=\"/search\" component={SearchPage} />\r\n          <Route exact path=\"/myShelf\" component={requireAuth(BookShelf)} />\r\n          <Route exact path=\"/myList\" component={requireAuth(ReadingList)} />\r\n          <Route exact path=\"/book/:id\" component={requireAuth(BookDetail)} />\r\n        </Route>\r\n      </Router>\r\n    </ApolloProvider>\r\n    )\r\n  }\r\n\r\nReactDOM.render(\r\n  <Root />,\r\n  document.querySelector('#root')\r\n);\r\n"],"sourceRoot":""}